name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov ruff black hypothesis

    - name: Run ruff linter
      run: |
        ruff check .

    - name: Run black formatter check
      run: |
        black --check .

    - name: Run tests with coverage
      run: |
        pytest tests/ -q --cov=imdb_recommender --cov-report=term-missing --cov-report=xml
      continue-on-error: false

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest
        
    - name: Run performance tests
      run: |
        pytest tests/test_performance.py -v
        
    - name: Validate test runtime
      run: |
        timeout 30s pytest tests/ -q || (echo "Tests took too long!" && exit 1)

  selenium-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest selenium webdriver-manager
        
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@latest
      
    - name: Run Selenium tests (no credentials)
      run: |
        pytest tests/test_selenium.py -v -k "not credentials"
        
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
        
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff black

    - name: Auto-fix code issues
      run: |
        ruff --fix .
        black .

    - name: Run ruff
      run: |
        ruff check . --output-format=github
        
    - name: Check black formatting
      run: |
        black --check --diff .

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install bandit
      run: |
        pip install bandit

    - name: Run bandit
      run: |
        bandit -r imdb_recommender/ -f sarif -o bandit-results.sarif || true

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: bandit-results.sarif
      continue-on-error: true
        
    - name: Check for hardcoded credentials
      run: |
        # Ensure no credentials are hardcoded in selenium files
        ! grep -r "password.*=" imdb_recommender/selenium_stub/ || exit 1
        ! grep -r "username.*=" imdb_recommender/selenium_stub/ || exit 1
        echo "âœ… No hardcoded credentials found"
